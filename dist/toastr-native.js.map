{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/toastr.ts"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isNotNullOrUndefined","Toastr","closeButton","closeClass","closeDuration","closeEasing","closeHtml","closeMethod","closeOnHover","complete","containerId","debug","escapeHtml","extendedTimeOut","hideDuration","hideMethod","iconClass","iconClasses","error","info","success","warning","messageClass","newestOnTop","onClick","onCloseClick","event","onHidden","undefined","onShown","positionClass","preventDuplicates","progressBar","progressClass","rtl","showDuration","showMethod","tapToDismiss","target","timeOut","titleClass","toastClass","toastElement","clearOptions","options","getOptions","containerEl","getContainer","clearToast","clearContainer","toastsToClear","children","length","toastr","classList","add","isNaN","style","setProperty","offsetWidth","offsetHeight","parentNode","removeChild","parentElement","previousToast","force","ownerDocument","activeElement","Error","fadeOut","hideEasing","removeToast","document","createElement","setAttribute","targetEl","querySelector","appendChild","console","warn","message","title","optionsOverride","notify","type","toastType","removeElement","el","callback","listener","getElementById","createContainer","htmlString","div","innerHTML","trim","firstChild","args","map","intervalId","_settings","_map","shouldExit","toastId","$titleElement","$messageElement","progressElement","closeElement","createElementFromHTML","hideEta","maxHideTime","response","state","startTime","Date","endTime","hideToast","override","clearTimeout","publish","source","replace","delayedHideToast","setTimeout","getTime","stickAround","updateProgress","percentage","width","functionToCheck","suffix","setTitle","setMessage","insertBefore","ariaValue","setAria","fadeIn","showEasing","parseFloat","toString","setInterval","displayToast","addEventListener","stopPropagation","cancelBubble","log","arg1","getDefaults","version"],"mappings":"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","file":"toastr-native.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","interface ToastrIconClasses {\r\n    error: string;\r\n    info: string;\r\n    success: string;\r\n    warning: string;\r\n}\r\n\r\ninterface ToastrClearOptions {\r\n    force: boolean;\r\n}\r\n\r\ninterface ToastrSettings {\r\n    closeButton: boolean;\r\n    closeClass: string;\r\n    closeDuration: number;\r\n    closeEasing: boolean;\r\n    closeHtml: string;\r\n    closeMethod: boolean;\r\n    closeOnHover: boolean;\r\n    complete: () => void;\r\n    containerId: string;\r\n    debug: boolean;\r\n    escapeHtml: boolean;\r\n    extendedTimeOut: number;\r\n    hideDuration: number;\r\n    hideEasing: string;\r\n    hideMethod: string;\r\n    iconClass: string;\r\n    iconClasses: ToastrIconClasses;\r\n    messageClass: string;\r\n    newestOnTop: boolean;\r\n    onClick: () => void;\r\n    onCloseClick: (event: Event) => void;\r\n    onHidden: () => {};\r\n    onShown: () => {};\r\n    positionClass: string;\r\n    preventDuplicates: boolean;\r\n    progressBar: boolean;\r\n    progressClass: string;\r\n    rtl: boolean;\r\n    showDuration: number;\r\n    showEasing: string;\r\n    showMethod: string;\r\n    target: string;\r\n    timeOut: number;\r\n    titleClass: string;\r\n    toastClass: string;\r\n    tapToDismiss: boolean;\r\n}\r\n\r\ninterface ToastrOptions extends Partial<ToastrSettings> {}\r\n\r\ninterface ToastrCallback {\r\n    endTime: Date;\r\n    toastId: number;\r\n    state: 'visible' | 'hidden';\r\n    startTime: Date;\r\n    options: ToastrSettings;\r\n    map: any;\r\n}\r\n\r\nconst defaultContainerId = 'toast-container';\r\n\r\nfunction isNotNullOrUndefined<T>(value: T | null | undefined): value is T {\r\n    return value != null && typeof value !== 'undefined';\r\n}\r\n\r\nfunction isFunction(functionToCheck: unknown) {\r\n    return functionToCheck && {}.toString.call(functionToCheck) === '[object Function]';\r\n}\r\n\r\nexport class Toastr {\r\n    public static version: string = '1.0.0';\r\n\r\n    private static containerEl: HTMLElement;\r\n\r\n    private static options: ToastrSettings;\r\n\r\n    private static previousToast: string | undefined;\r\n    private static listener: (eventArgs: ToastrCallback) => void;\r\n    private static toastId = 0;\r\n    private static toastType = {\r\n        error: 'error',\r\n        info: 'info',\r\n        success: 'success',\r\n        warning: 'warning',\r\n    };\r\n\r\n    /**\r\n     * Get default settings from toastrjs\r\n     */\r\n    public static getDefaults(): ToastrOptions {\r\n        return {\r\n            closeButton: false,\r\n            closeClass: 'toast-close-button',\r\n            closeDuration: 0,\r\n            closeEasing: false,\r\n            closeHtml: '<button type=\"button\">&times;</button>',\r\n            closeMethod: false,\r\n            closeOnHover: true,\r\n            complete: () => {},\r\n            containerId: defaultContainerId,\r\n            debug: false,\r\n            escapeHtml: false,\r\n            extendedTimeOut: 1000,\r\n            hideDuration: 1000,\r\n            hideMethod: 'fadeOut',\r\n            iconClass: 'toast-info',\r\n            iconClasses: {\r\n                error: 'toast-error',\r\n                info: 'toast-info',\r\n                success: 'toast-success',\r\n                warning: 'toast-warning',\r\n            },\r\n            messageClass: 'toast-message',\r\n            newestOnTop: true,\r\n            onClick: () => {},\r\n            onCloseClick: (event: Event) => {},\r\n            onHidden: undefined,\r\n            onShown: undefined,\r\n            positionClass: 'toast-top-right',\r\n            preventDuplicates: false,\r\n            progressBar: false,\r\n            progressClass: 'toast-progress',\r\n            rtl: false,\r\n            showDuration: 300,\r\n            showMethod: 'fadeIn', // fadeIn, slideDown, and show are built into jQuery\r\n            tapToDismiss: true,\r\n            target: 'body',\r\n            timeOut: 5000, // Set timeOut and extendedTimeOut to 0 to make it sticky\r\n            titleClass: 'toast-title',\r\n            toastClass: 'toast',\r\n        };\r\n    }\r\n\r\n    public static clear(toastElement: HTMLElement, clearOptions: ToastrClearOptions) {\r\n        const options = Toastr.getOptions();\r\n        if (!Toastr.containerEl) {\r\n            Toastr.getContainer(options, false);\r\n        }\r\n        if (!Toastr.clearToast(toastElement, options, clearOptions)) {\r\n            Toastr.clearContainer(options);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clear toastr container\r\n     */\r\n    private static clearContainer(options: ToastrSettings) {\r\n        if (Toastr.containerEl == null) return;\r\n\r\n        const toastsToClear = Toastr.containerEl.children;\r\n        for (let i = toastsToClear.length - 1; i >= 0; i--) {\r\n            Toastr.clearToast(toastsToClear[i] as HTMLElement, options);\r\n        }\r\n    }\r\n\r\n    private static fadeOut(toastElement: HTMLElement, toastr: ToastrOptions) {\r\n        toastElement.classList.add('animate__animated', 'animate__fadeOut');\r\n        if (isNotNullOrUndefined(toastr.hideDuration) && !isNaN(toastr.hideDuration)) {\r\n            toastElement.style.setProperty('--animate-duration', toastr.hideDuration / 1000 + 's');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove a toast element\r\n     */\r\n    private static removeToast(toastElement: HTMLElement) {\r\n        if (!Toastr.containerEl) {\r\n            Toastr.containerEl = Toastr.getContainer();\r\n        }\r\n        if (toastElement.offsetWidth > 0 && toastElement.offsetHeight > 0) {\r\n            return;\r\n        }\r\n\r\n        toastElement.parentNode?.removeChild(toastElement);\r\n        if (Toastr.containerEl.children.length === 0) {\r\n            Toastr.containerEl.parentElement?.removeChild(Toastr.containerEl);\r\n            Toastr.previousToast = undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clear toastr element\r\n     */\r\n    private static clearToast(toastElement: HTMLElement, options: ToastrSettings, clearOptions?: ToastrClearOptions) {\r\n        const force = clearOptions && clearOptions.force ? clearOptions.force : false;\r\n        if (toastElement && (force || toastElement !== toastElement.ownerDocument?.activeElement)) {\r\n            if (options.hideMethod !== 'none') {\r\n                Toastr.fadeOut(toastElement, {\r\n                    hideDuration: options.hideDuration,\r\n                    hideEasing: options.hideEasing,\r\n                    hideMethod: options.hideMethod,\r\n                    complete: () => {\r\n                        Toastr.removeToast(toastElement);\r\n                    },\r\n                });\r\n            } else {\r\n                throw new Error('HideMethod not implemented yet');\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Creates the container that contains all toasters\r\n     */\r\n    private static createContainer(options: ToastrSettings) {\r\n        Toastr.containerEl = document.createElement('div');\r\n        Toastr.containerEl.setAttribute('id', options.containerId);\r\n        Toastr.containerEl.classList.add(options.positionClass);\r\n        const targetEl: HTMLElement | null = document.querySelector(options.target);\r\n\r\n        if (targetEl != null) {\r\n            targetEl.appendChild(Toastr.containerEl);\r\n        } else {\r\n            console.warn(`Couldn't create toastr container.`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Show warning message\r\n     */\r\n    public static warning(message: string, title: string, optionsOverride: ToastrSettings) {\r\n        return Toastr.notify({\r\n            type: Toastr.toastType.warning,\r\n            iconClass: (Toastr.getOptions().iconClasses as ToastrIconClasses).warning,\r\n            message,\r\n            optionsOverride,\r\n            title,\r\n        });\r\n    }\r\n\r\n    public static remove(toastElement: HTMLElement) {\r\n        const options = Toastr.getOptions();\r\n        if (!Toastr.containerEl) {\r\n            Toastr.getContainer(options);\r\n        }\r\n        if (toastElement && toastElement !== toastElement.ownerDocument?.activeElement) {\r\n            Toastr.removeToast(toastElement);\r\n            return;\r\n        }\r\n        if (Toastr.containerEl.children.length) {\r\n            Toastr.removeElement(Toastr.containerEl);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Native remove element helper\r\n     */\r\n    private static removeElement(el: HTMLElement) {\r\n        if (isNotNullOrUndefined(el) && isNotNullOrUndefined(el.parentNode)) {\r\n            el.parentNode.removeChild(el);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Show info message\r\n     */\r\n    public static info(message: string, title: string, optionsOverride: ToastrSettings) {\r\n        return Toastr.notify({\r\n            type: Toastr.toastType.info,\r\n            iconClass: (Toastr.getOptions().iconClasses as ToastrIconClasses).info,\r\n            message,\r\n            optionsOverride,\r\n            title,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Register a callback function\r\n     */\r\n    public static subscribe(callback: (eventArgs: ToastrCallback) => void) {\r\n        Toastr.listener = callback;\r\n    }\r\n\r\n    /**\r\n     * Show success message\r\n     */\r\n    public static success(message: string, title: string, optionsOverride: ToastrSettings) {\r\n        return Toastr.notify({\r\n            type: Toastr.toastType.success,\r\n            iconClass: (Toastr.getOptions().iconClasses as ToastrIconClasses).success,\r\n            message,\r\n            optionsOverride,\r\n            title,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Shows an error message\r\n     */\r\n    public static error(message: string, title: string, optionsOverride: ToastrSettings) {\r\n        return Toastr.notify({\r\n            type: Toastr.toastType.error,\r\n            iconClass: (Toastr.getOptions().iconClasses as ToastrIconClasses).error,\r\n            message,\r\n            optionsOverride,\r\n            title,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get container that contains the toastr\r\n     */\r\n    public static getContainer(options?: ToastrSettings, create?: boolean) {\r\n        if (!options) {\r\n            options = Toastr.getOptions() as ToastrSettings;\r\n        }\r\n        if (options.containerId != null) {\r\n            Toastr.containerEl = document.getElementById(options.containerId) as HTMLElement;\r\n        }\r\n        if (Toastr.containerEl != null) {\r\n            return Toastr.containerEl;\r\n        }\r\n        if (create === true) {\r\n            Toastr.createContainer(options);\r\n        }\r\n        return Toastr.containerEl;\r\n    }\r\n\r\n    private static createElementFromHTML(htmlString: string): HTMLElement {\r\n        const div = document.createElement('div');\r\n        div.innerHTML = htmlString.trim();\r\n\r\n        // Change this to div.childNodes to support multiple top-level nodes\r\n        return div.firstChild as HTMLElement;\r\n    }\r\n\r\n    /**\r\n     * ...\r\n     */\r\n    private static publish(args: ToastrCallback) {\r\n        if (!Toastr.listener) {\r\n            return;\r\n        }\r\n        Toastr.listener(args);\r\n    }\r\n\r\n    private static notify(map: any) {\r\n        const shouldExit = (_settings: ToastrSettings, _map: any) => {\r\n            if (_settings.preventDuplicates) {\r\n                if (_map.message === Toastr.previousToast) {\r\n                    return true;\r\n                } else {\r\n                    Toastr.previousToast = _map.message;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n\r\n        let options = Toastr.getOptions();\r\n        let iconClass = map.iconClass || options.iconClass;\r\n\r\n        if (typeof map.optionsOverride !== 'undefined') {\r\n            options = {\r\n                ...options,\r\n                ...map.optionsOverride,\r\n            };\r\n            iconClass = map.optionsOverride.iconClass || iconClass;\r\n        }\r\n\r\n        if (shouldExit(options, map)) {\r\n            return;\r\n        }\r\n\r\n        Toastr.toastId++;\r\n\r\n        Toastr.containerEl = Toastr.getContainer(options, true);\r\n\r\n        let intervalId: number | undefined;\r\n        const toastElement = document.createElement('div');\r\n        const $titleElement = document.createElement('div');\r\n        const $messageElement = document.createElement('div');\r\n        const progressElement = document.createElement('div');\r\n        const closeElement: HTMLElement = Toastr.createElementFromHTML(options.closeHtml);\r\n        const progressBar: {\r\n            intervalId?: number;\r\n            hideEta?: number;\r\n            maxHideTime?: number;\r\n        } = {\r\n            intervalId: undefined,\r\n            hideEta: undefined,\r\n            maxHideTime: undefined,\r\n        };\r\n\r\n        const response: ToastrCallback = {\r\n            toastId: Toastr.toastId,\r\n            state: 'visible',\r\n            startTime: new Date(),\r\n            endTime: new Date(),\r\n            options,\r\n            map,\r\n        };\r\n\r\n        const hideToast = (override: boolean) => {\r\n            const method = override && options.closeMethod !== false ? options.closeMethod : options.hideMethod;\r\n            const hideDuration = override && options.closeDuration !== 0 ? options.closeDuration : options.hideDuration;\r\n            if (toastElement === toastElement.ownerDocument?.activeElement && !override) {\r\n                return;\r\n            }\r\n            clearTimeout(+(progressBar.intervalId || 0));\r\n\r\n            Toastr.fadeOut(toastElement, {\r\n                hideDuration,\r\n                complete: () => {\r\n                    Toastr.removeToast(toastElement);\r\n                    clearTimeout(intervalId);\r\n                    if (typeof options.onHidden !== 'undefined') {\r\n                        // debugger;\r\n                    }\r\n                    if (options.onHidden && response.state !== 'hidden') {\r\n                        options.onHidden();\r\n                    }\r\n                    response.state = 'hidden';\r\n                    response.endTime = new Date();\r\n                    Toastr.publish(response);\r\n                },\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Display toast message\r\n         */\r\n        const displayToast = () => {\r\n            // toastElement.style.display = 'none';\r\n\r\n            if (options.showMethod === 'fadeIn') {\r\n                Toastr.fadeIn(toastElement, {\r\n                    showDuration: options.showDuration,\r\n                    showEasing: options.showEasing,\r\n                    complete: options.onShown,\r\n                });\r\n            } else {\r\n                throw new Error('Show method not implemented yet');\r\n            }\r\n\r\n            if (options.timeOut) {\r\n                intervalId = setTimeout(hideToast, options.timeOut);\r\n                progressBar.maxHideTime = parseFloat(options.timeOut.toString());\r\n                progressBar.hideEta = new Date().getTime() + progressBar.maxHideTime;\r\n                if (options.progressBar) {\r\n                    progressBar.intervalId = setInterval(updateProgress, 10);\r\n                }\r\n            }\r\n        };\r\n\r\n        const handleEvents = () => {\r\n            if (options.closeOnHover) {\r\n                toastElement.addEventListener('onmouseover', stickAround);\r\n                toastElement.addEventListener('onmouseout', delayedHideToast);\r\n            }\r\n\r\n            if (!options.onClick && options.tapToDismiss) {\r\n                toastElement.addEventListener('click', () => {\r\n                    hideToast(false);\r\n                });\r\n            }\r\n\r\n            if (options.closeButton && closeElement) {\r\n                toastElement.addEventListener('click', event => {\r\n                    if (event.stopPropagation) {\r\n                        event.stopPropagation();\r\n                    } else if (event.cancelBubble !== undefined && event.cancelBubble !== true) {\r\n                        event.cancelBubble = true;\r\n                    }\r\n\r\n                    if (options.onCloseClick) {\r\n                        options.onCloseClick(event);\r\n                    }\r\n\r\n                    hideToast(true);\r\n                });\r\n            }\r\n\r\n            if (isFunction(options.onClick)) {\r\n                toastElement.addEventListener('click', event => {\r\n                    options.onCloseClick(event);\r\n                    hideToast(false);\r\n                });\r\n            }\r\n        };\r\n\r\n        const escapeHtml = (source: string) => {\r\n            if (source == null) {\r\n                source = '';\r\n            }\r\n\r\n            return source.replace(/&/g, '&amp;').replace(/'/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n        };\r\n\r\n        const setAria = () => {\r\n            let ariaValue = '';\r\n            switch (map.iconClass) {\r\n                case 'toast-success':\r\n                case 'toast-info':\r\n                    ariaValue = 'polite';\r\n                    break;\r\n                default:\r\n                    ariaValue = 'assertive';\r\n            }\r\n            toastElement.setAttribute('aria-live', ariaValue);\r\n        };\r\n\r\n        /**\r\n         * Set icons on toast\r\n         */\r\n        const setIcon = () => {\r\n            if (map.iconClass) {\r\n                toastElement.classList.add(options.toastClass, iconClass);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Add toaster to container\r\n         */\r\n        const setSequence = () => {\r\n            if (options.newestOnTop) {\r\n                Toastr.containerEl.insertBefore(toastElement, Toastr.containerEl.firstChild);\r\n            } else {\r\n                Toastr.containerEl.appendChild(toastElement);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Set title of a toast message\r\n         */\r\n        const setTitle = () => {\r\n            if (map.title) {\r\n                let suffix = map.title;\r\n                if (options.escapeHtml) {\r\n                    suffix = escapeHtml(map.title);\r\n                }\r\n                $titleElement.innerHTML += suffix;\r\n                $titleElement.classList.add(options.titleClass);\r\n                toastElement.appendChild($titleElement);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Set message of a toast message\r\n         */\r\n        const setMessage = () => {\r\n            if (map.message) {\r\n                let suffix = map.message;\r\n                if (options.escapeHtml) {\r\n                    suffix = escapeHtml(map.message);\r\n                }\r\n                $messageElement.innerHTML += suffix;\r\n                $messageElement.classList.add(options.messageClass);\r\n                toastElement.appendChild($messageElement);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Set closebutton\r\n         */\r\n        const setCloseButton = () => {\r\n            if (options.closeButton) {\r\n                closeElement.classList.add(options.closeClass);\r\n                closeElement.setAttribute('role', 'button');\r\n                toastElement.insertBefore(closeElement, toastElement.firstChild);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Set progressbar\r\n         */\r\n        const setProgressBar = () => {\r\n            if (options.progressBar) {\r\n                progressElement.classList.add(options.progressClass);\r\n                toastElement.insertBefore(progressElement, toastElement.firstChild);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Set RTL\r\n         */\r\n        const setRTL = () => {\r\n            if (options.rtl) {\r\n                toastElement.classList.add('rtl');\r\n            }\r\n        };\r\n\r\n        const delayedHideToast = () => {\r\n            if (options.timeOut > 0 || options.extendedTimeOut > 0) {\r\n                intervalId = setTimeout(hideToast, options.extendedTimeOut);\r\n                progressBar.maxHideTime = options.extendedTimeOut;\r\n                progressBar.hideEta = new Date().getTime() + progressBar.maxHideTime;\r\n            }\r\n        };\r\n\r\n        const stickAround = () => {\r\n            clearTimeout(intervalId);\r\n            progressBar.hideEta = 0;\r\n            // Todo\r\n            // toastElement.stop(true, true)[options.showMethod]({\r\n            //   duration: options.showDuration,\r\n            //   easing: options.showEasing,\r\n            // });\r\n        };\r\n\r\n        /**\r\n         * Get update progress\r\n         */\r\n        const updateProgress = () => {\r\n            const percentage = ((progressBar.hideEta ?? 0 - new Date().getTime()) / (progressBar?.maxHideTime ?? 0)) * 100;\r\n            progressElement.style.width = percentage + '%';\r\n        };\r\n\r\n        const personalizeToast = () => {\r\n            setIcon();\r\n            setTitle();\r\n            setMessage();\r\n            setCloseButton();\r\n            setProgressBar();\r\n            setRTL();\r\n            setSequence();\r\n            setAria();\r\n        };\r\n\r\n        personalizeToast();\r\n\r\n        displayToast();\r\n\r\n        handleEvents();\r\n\r\n        Toastr.publish(response);\r\n\r\n        if (options.debug && console) {\r\n            console.log(response);\r\n        }\r\n\r\n        return toastElement;\r\n    }\r\n    static fadeIn(toastElement: HTMLDivElement, arg1: { showDuration: any; showEasing: any; complete: any }) {\r\n        toastElement.classList.add('animate__animated', 'animate__fadeIn');\r\n        toastElement.style.setProperty('--animate-duration', '10s');\r\n    }\r\n\r\n    /**\r\n     * Get toaster options\r\n     */\r\n    private static getOptions(): ToastrSettings {\r\n        return {\r\n            ...Toastr.getDefaults(),\r\n            ...Toastr.options,\r\n        };\r\n    }\r\n}\r\n"],"sourceRoot":""}